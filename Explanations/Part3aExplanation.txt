
Below is a decription for mprotect found on the manual pages. It pretty much sums up the fact that we are trying to make the Heap executable. If this call is commented out, as the man pages elaborate a segmentation fault occurs. Thus part3a (without commenting mprotect) opens up the shell and part3b (after commenting call to mprotect) results in segmentation fault.

mprotect(buf, strlen(shellcode)+10, PROT_EXEC|PROT_WRITE|PROT_READ);
We also note that we make just those pages which contain the shell code buffer executable.

Here is the elaboration found on the manual page
       Header file:
       #include <sys/mman.h>

       int mprotect(void *addr, size_t len, int prot);


       mprotect() changes protection for the calling process's memory
       page(s) containing any part of the address range in the interval
       [addr, addr+len-1].  addr must be aligned to a page boundary.

       If the calling process tries to access memory in a manner that
       violates the protection, then the kernel generates a SIGSEGV signal
       for the process.

       prot is either PROT_NONE or a bitwise-or of the other values in the
       following list:

       PROT_NONE  The memory cannot be accessed at all.

       PROT_READ  The memory can be read.

       PROT_WRITE The memory can be modified.

       PROT_EXEC  The memory can be executed.
